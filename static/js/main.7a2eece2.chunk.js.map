{"version":3,"sources":["reducer.ts","StateContext.tsx","Grid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isBaseState","state","undefined","history","word","x1","y1","x2","y2","start","x","Math","min","y","end","max","withHistory","baseState","initialState","actions","undoStack","isValidWord","words","filterSameLine","R","w","reducer","prev","action","type","previous","grid","payload","letter","nextState","length","console","log","change","offsetX","offsetY","StateContext","React","createContext","dispatch","getLines2","width","height","horizontal","colProp","rowProp","lines","filtered","col","row","Grid","props","useContext","vertical","getLines","numbers","uniqStarts","getNumbers","useState","dragStart","setDragStart","dragEnd","setDragEnd","dragBorderColor","map","className","wordStartNumber","border","includes","draggable","onDragStart","onDragEnter","onDragEnd","highlightVertical","highlightHorizontal","showSolution","id","size","value","pattern","onChange","e","target","substr","toUpperCase","test","isLetter","onClick","select","onFocus","onKeyDown","key","document","getElementById","focus","preventDefault","tabIndex","App","useReducer","setHighlightHorizontal","setHighlightVertical","Provider","keyMap","UNDO","REDO","handlers","name","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a2eece2.chunk.js","sourcesContent":["import * as R from 'ramda'\r\n\r\n// prettier-ignore\r\nexport type Letter = 'A'|'B'|'C'|'D'|'E'|'F'|'G'|'H'|'I'|'J'|'K'|'L'|'M'|'N'|'O'|'P'|'Q'|'R'|'S'|'T'|'U'|'V'|'W'|'X'|'Y'|'Z'\r\nexport function isLetter(letter: Letter | string): letter is Letter {\r\n  return /[A-Z]/.test(letter)\r\n}\r\nexport interface Pos {\r\n  x: number\r\n  y: number\r\n}\r\nexport interface Word {\r\n  start: Pos\r\n  end: Pos\r\n}\r\n\r\nexport interface State extends BaseState {\r\n  history: { initialState: BaseState; actions: Action[]; undoStack: Action[] }\r\n}\r\n\r\nexport interface BaseState {\r\n  grid: (Letter | '')[][]\r\n  words: Word[]\r\n  offsetX: [number, number]\r\n  offsetY: [number, number]\r\n}\r\n\r\nfunction isBaseState(state: State | BaseState): state is BaseState {\r\n  return (state as State).history === undefined\r\n}\r\n\r\nexport function word(x1: number, y1: number, x2: number, y2: number): Word {\r\n  return {\r\n    start: { x: Math.min(x1, x2), y: Math.min(y1, y2) },\r\n    end: { x: Math.max(x1, x2), y: Math.max(y1, y2) },\r\n  }\r\n}\r\n\r\nexport function withHistory(baseState: BaseState): State {\r\n  return {\r\n    ...baseState,\r\n    history: {\r\n      initialState: baseState,\r\n      actions: [],\r\n      undoStack: [],\r\n    },\r\n  }\r\n}\r\nexport function isValidWord(word: Word, words: Word[]) {\r\n  const filterSameLine = R.filter((w) => {\r\n    return word.start.x === word.end.x // word is vertical\r\n      ? w.start.x === w.end.x && w.start.x === word.start.x // filter only vertical in same col\r\n      : w.start.y === w.end.y && w.start.y === word.start.y // filter only horizontal in same row\r\n  }, words)\r\n  return (\r\n        // check if word start is intersecting existing word\r\n        R.findIndex((w) => {\r\n      if (word.start.x === word.end.x) {\r\n        return word.start.y >= w.start.y && word.start.y <= w.end.y\r\n      } else {\r\n        return word.start.x >= w.start.x && word.start.x <= w.end.x\r\n      }\r\n    }, filterSameLine) === -1\r\n  )\r\n}\r\n\r\ninterface ChangeAction {\r\n  type: 'ChangeAction'\r\n  payload: {\r\n    letter: Letter|''\r\n    x: number\r\n    y: number\r\n  }\r\n}\r\n\r\ninterface WordAction {\r\n  type: 'WordAction'\r\n  payload: {\r\n    word: Word\r\n  }\r\n}\r\n\r\ninterface UndoAction {\r\n  type: 'UndoAction'\r\n}\r\n\r\ninterface RedoAction {\r\n  type: 'RedoAction'\r\n}\r\n\r\ninterface InitializeAction {\r\n  type: 'InitializeAction'\r\n}\r\n\r\nexport type Action =\r\n  | ChangeAction\r\n  | WordAction\r\n  | UndoAction\r\n  | RedoAction\r\n  | InitializeAction\r\n\r\nexport function reducer(\r\n  prev: State | BaseState,\r\n  action: Action = {\r\n    type: 'InitializeAction',\r\n  }\r\n): State {\r\n  const previous = isBaseState(prev) ? withHistory(prev) : prev\r\n  switch (action.type) {\r\n    case 'ChangeAction':\r\n      return {\r\n        ...previous,\r\n        grid: R.update(\r\n          action.payload.y,\r\n          R.update(\r\n            action.payload.x,\r\n            action.payload.letter,\r\n            previous.grid[action.payload.y]\r\n          ),\r\n          previous.grid\r\n        ),\r\n        history: {\r\n          ...previous.history,\r\n          actions: [...previous.history.actions, action],\r\n          undoStack: [],\r\n        },\r\n      }\r\n    case 'WordAction':\r\n      return isValidWord(action.payload.word, previous.words)\r\n        ? {\r\n            ...previous,\r\n            words: [...previous.words, action.payload.word],\r\n            history: {\r\n              ...previous.history,\r\n              actions: [...previous.history.actions, action],\r\n              undoStack: [],\r\n            },\r\n          }\r\n        : previous\r\n    case 'UndoAction': {\r\n      const nextState = R.reduce(\r\n        reducer,\r\n        reducer(previous.history.initialState),\r\n        R.slice(0, -1, previous.history.actions)\r\n      )\r\n      return {\r\n        ...nextState,\r\n        history: {\r\n          ...nextState.history,\r\n          undoStack: [\r\n            ...previous.history.undoStack,\r\n            previous.history.actions[previous.history.actions.length - 1],\r\n          ],\r\n        },\r\n      }\r\n    }\r\n    case 'RedoAction': {\r\n      const nextState = reducer(\r\n        previous,\r\n        previous.history.undoStack[previous.history.undoStack.length - 1]\r\n      )\r\n      console.log('redone', nextState, previous.history)\r\n      return {\r\n        ...nextState,\r\n        history: {\r\n          ...nextState.history,\r\n          undoStack: R.slice(0, -1, previous.history.undoStack),\r\n        },\r\n      }\r\n    }\r\n    default:\r\n      return previous\r\n  }\r\n}\r\n\r\nexport function change(letter: Letter|'', x: number, y: number): ChangeAction {\r\n  return {\r\n    type: 'ChangeAction',\r\n    payload: {\r\n      letter: letter,\r\n      x: x,\r\n      y: y,\r\n    },\r\n  }\r\n}\r\n\r\nexport function addWord(word: Word): WordAction {\r\n  return {\r\n    type: 'WordAction',\r\n    payload: {\r\n      word: word,\r\n    },\r\n  }\r\n}\r\n\r\nexport function undo(): UndoAction {\r\n  return {\r\n    type: 'UndoAction',\r\n  }\r\n}\r\n\r\nexport function redo(): RedoAction {\r\n  return {\r\n    type: 'RedoAction',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport * as R from 'ramda'\r\nimport { State, Action, BaseState } from './reducer'\r\n\r\nconst baseState: BaseState = {\r\n  grid: R.times(() => R.times<''>(() => '', 26), 19),\r\n  words: [],\r\n  offsetX: [1, 0],\r\n  offsetY: [2, 1],\r\n}\r\n\r\nexport const initialState = {\r\n  ...baseState,\r\n  history: {\r\n    initialState: baseState,\r\n    actions: [],\r\n    undoStack: [],\r\n  },\r\n}\r\n\r\nexport const StateContext = React.createContext<{\r\n  state: State\r\n  dispatch: (action: Action) => void\r\n}>({\r\n  state: initialState,\r\n  dispatch: () => {},\r\n})\r\n","import * as R from 'ramda'\r\nimport React from 'react'\r\nimport {\r\n  State,\r\n  Pos,\r\n  Word,\r\n  change,\r\n  isLetter,\r\n  addWord,\r\n  word,\r\n  undo,\r\n  redo,\r\n  isValidWord,\r\n} from './reducer'\r\nimport { StateContext } from './StateContext'\r\n\r\nexport interface GridProps {\r\n  showSolution?: boolean\r\n  highlightHorizontal?: boolean\r\n  highlightVertical?: boolean\r\n}\r\n/**\r\n * Searches for horizontal (rowProp === 'x') or vertical lines (rowProp === 'y') lines for the cross word puzzle\r\n * @param width number of rows\r\n * @param height number of columns\r\n * @param words horizontal or vertical words\r\n * @param rowProp 'x' for horizontal or 'y' for vertical\r\n * @returns list of indizes for every row\r\n */\r\nfunction getLines2(\r\n  width: number,\r\n  height: number,\r\n  words: Word[],\r\n  horizontal: boolean\r\n) {\r\n  const colProp = horizontal ? 'x' : 'y'\r\n  const rowProp = horizontal ? 'y' : 'x'\r\n  const lines: number[][] = R.times(\r\n    () => R.times(R.identity, width - 1),\r\n    height\r\n  )\r\n  const filtered: Word[] = R.filter(\r\n    (word) =>\r\n      horizontal ? word.start.y == word.end.y : word.start.x == word.end.x,\r\n    words\r\n  )\r\n  R.forEach((word: Word) => {\r\n    const col = word.start[colProp]\r\n    const row = word.start[rowProp]\r\n    if (row > height) return\r\n    const start = col < 0 ? 0 : R.indexOf(col, lines[row])\r\n    const length = col < 0 ? word.end[colProp] : word.end[colProp] - col\r\n    lines[row] = R.remove(start, length, lines[row])\r\n  }, filtered)\r\n  return lines\r\n}\r\n\r\nexport function getLines({ grid, words, offsetX, offsetY }: State) {\r\n  return {\r\n    horizontal: getLines2(\r\n      grid[0].length - offsetX[0],\r\n      grid.length - offsetY[0],\r\n      words,\r\n      true\r\n    ),\r\n    vertical: getLines2(\r\n      grid.length - offsetY[0],\r\n      grid[0].length - offsetX[0],\r\n      words,\r\n      false\r\n    ),\r\n  }\r\n}\r\n\r\nexport function getNumbers({ words }: State): Pos[] {\r\n  const uniqStarts = R.uniq(R.map((word) => word.start, words))\r\n  const sorted = R.sortWith(\r\n    [R.ascend(R.prop('y')), R.ascend(R.prop('x'))],\r\n    uniqStarts\r\n  )\r\n  return sorted\r\n}\r\n\r\nexport function Grid(props: GridProps) {\r\n  const { state, dispatch } = React.useContext(StateContext)\r\n  const lines = getLines(state)\r\n  const numbers = getNumbers(state)\r\n  const [dragStart, setDragStart] = React.useState<Pos>()\r\n  const [dragEnd, setDragEnd] = React.useState<Pos>()\r\n  let dragBorderColor = ''\r\n  if (dragStart && dragEnd) {\r\n    const x1 = dragStart.x - state.offsetX[0]\r\n    const y1 = dragStart.y - state.offsetY[0]\r\n    const x2 = dragEnd.x - state.offsetX[0]\r\n    const y2 = dragEnd.y - state.offsetY[0]\r\n    dragBorderColor = isValidWord(\r\n      word(\r\n        Math.min(x1, x2),\r\n        Math.min(y1, y2),\r\n        Math.max(x1, x2),\r\n        Math.max(y1, y2)\r\n      ),\r\n      state.words\r\n    )\r\n      ? 'border-green-400'\r\n      : 'border-red-800'\r\n  }\r\n  return (\r\n    <>\r\n      {state.grid.map((row, y) => {\r\n        return (\r\n          <div className=\"flex flex-row text-lg\" key={y}>\r\n            {row.map((letter, x) => {\r\n              const vertical = R.filter(\r\n                (w) => w.start.x === w.end.x,\r\n                state.words\r\n              )\r\n              const horizontal = R.filter(\r\n                (w) => w.start.y === w.end.y,\r\n                state.words\r\n              )\r\n              const wordStartNumber = R.indexOf(\r\n                { x: x - state.offsetX[0], y: y - state.offsetY[0] },\r\n                numbers\r\n              )\r\n              const border =\r\n                'border border-black ' +\r\n                (letter ||\r\n                (y >= state.offsetY[0] &&\r\n                  x >= state.offsetX[0] &&\r\n                  y < state.grid.length - state.offsetY[1] &&\r\n                  x < state.grid[0].length - state.offsetX[1])\r\n                  ? `${\r\n                      lines.horizontal[y - state.offsetY[0]]?.includes(\r\n                        x - state.offsetX[0]\r\n                      )\r\n                        ? 'border-r-4'\r\n                        : 'pr-1'\r\n                    } ${\r\n                      lines.vertical[x - state.offsetX[0]]?.includes(\r\n                        y - state.offsetY[0]\r\n                      )\r\n                        ? 'border-b-4'\r\n                        : 'pb-1'\r\n                    }`\r\n                  : 'border-dashed')\r\n              return (\r\n                <div\r\n                  draggable\r\n                  className=\"relative flex w-12 h-12 items-center justify-center\"\r\n                  key={x}\r\n                  onDragStart={() => {\r\n                    setDragStart({ x, y })\r\n                  }}\r\n                  onDragEnter={() => {\r\n                    setDragEnd({ x, y })\r\n                  }}\r\n                  onDragEnd={() => {\r\n                    if (dragStart && dragEnd) {\r\n                      dispatch(\r\n                        addWord(\r\n                          word(\r\n                            dragStart.x - state.offsetX[0],\r\n                            dragStart.y - state.offsetY[0],\r\n                            dragEnd.x - state.offsetX[0],\r\n                            dragEnd.y - state.offsetY[0]\r\n                          )\r\n                        )\r\n                      )\r\n                      setDragStart(undefined)\r\n                      setDragEnd(undefined)\r\n                    }\r\n                  }}\r\n                >\r\n                  <div\r\n                    className={`${border} w-12 h-12 flex items-center justify-center`}\r\n                  >\r\n                    {props.highlightVertical && (\r\n                      <div\r\n                        className={`absolute border-red-400 w-10 h-12 pointer-events-none ${\r\n                          R.find(\r\n                            (w) =>\r\n                              x === w.start.x + state.offsetX[0] &&\r\n                              y === w.start.y + state.offsetY[0],\r\n                            vertical\r\n                          )\r\n                            ? 'border-l-4 border-t-4'\r\n                            : ''\r\n                        } ${\r\n                          R.find(\r\n                            (w) =>\r\n                              x === w.start.x + state.offsetX[0] &&\r\n                              x === w.end.x + state.offsetX[0] &&\r\n                              y >= w.start.y + state.offsetY[0] &&\r\n                              y <= w.end.y + state.offsetY[0],\r\n                            vertical\r\n                          )\r\n                            ? 'border-l-4 border-r-4'\r\n                            : ''\r\n                        } ${\r\n                          R.find(\r\n                            (w) =>\r\n                              x === w.end.x + state.offsetX[0] &&\r\n                              y === w.end.y + state.offsetY[0],\r\n                            vertical\r\n                          )\r\n                            ? 'border-r-4 border-b-4'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {props.highlightHorizontal && (\r\n                      <div\r\n                        className={`absolute border-blue-400 w-12 h-10 pointer-events-none ${\r\n                          R.find(\r\n                            (w) =>\r\n                              x === w.start.x + state.offsetX[0] &&\r\n                              y === w.start.y + state.offsetY[0],\r\n                            horizontal\r\n                          )\r\n                            ? 'border-l-4 border-t-4'\r\n                            : ''\r\n                        } ${\r\n                          R.find(\r\n                            (w) =>\r\n                              y === w.start.y + state.offsetY[0] &&\r\n                              y === w.end.y + state.offsetY[0] &&\r\n                              x >= w.start.x + state.offsetX[0] &&\r\n                              x <= w.end.x + state.offsetX[0],\r\n                            horizontal\r\n                          )\r\n                            ? 'border-t-4 border-b-4'\r\n                            : ''\r\n                        } ${\r\n                          R.find(\r\n                            (w) =>\r\n                              x === w.end.x + state.offsetX[0] &&\r\n                              y === w.end.y + state.offsetY[0],\r\n                            horizontal\r\n                          )\r\n                            ? 'border-r-4 border-b-4'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {dragStart && (\r\n                      <div\r\n                        className={`absolute ${dragBorderColor} w-9 h-9 pointer-events-none ${\r\n                          x === dragStart?.x && y === dragStart?.y\r\n                            ? 'border-l-4 border-t-4'\r\n                            : ''\r\n                        } ${\r\n                          y === dragStart?.y &&\r\n                          y === dragEnd?.y &&\r\n                          x >= dragStart?.x &&\r\n                          x <= dragEnd?.x //horizontal\r\n                            ? 'border-t-4 border-b-4'\r\n                            : x === dragStart?.x &&\r\n                              x === dragEnd?.x &&\r\n                              y >= dragStart?.y &&\r\n                              y <= dragEnd?.y //vertical\r\n                            ? 'border-l-4 border-r-4'\r\n                            : ''\r\n                        } ${\r\n                          x === dragEnd?.x && y === dragEnd?.y\r\n                            ? 'border-r-4 border-b-4'\r\n                            : ''\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {wordStartNumber >= 0 ? (\r\n                      <span className=\"absolute top-0 left-1 text-xs\">\r\n                        {wordStartNumber + 1}\r\n                      </span>\r\n                    ) : null}\r\n                    {props.showSolution && (\r\n                      <input\r\n                        id={`letter-${x}-${y}`}\r\n                        className=\"text-center\"\r\n                        type=\"text\"\r\n                        size={1}\r\n                        value={letter}\r\n                        pattern=\"[A-Z]\"\r\n                        onChange={(e) => {\r\n                          if (!e.target.value) {\r\n                            dispatch(change('', x, y))\r\n                          } else {\r\n                            const letter = e.target.value\r\n                              .substr(-1)\r\n                              .toUpperCase()\r\n                            if (isLetter(letter)) {\r\n                              dispatch(change(letter, x, y))\r\n                            }\r\n                          }\r\n                        }}\r\n                        onClick={(e) => (e.target as HTMLInputElement).select()}\r\n                        onFocus={(e) => (e.target as HTMLInputElement).select()}\r\n                        onKeyDown={(e) => {\r\n                          switch (e.key) {\r\n                            case 'ArrowLeft':\r\n                              document\r\n                                .getElementById(`letter-${x - 1}-${y}`)\r\n                                ?.focus()\r\n                              e.preventDefault()\r\n                              break\r\n                            case 'ArrowRight':\r\n                              document\r\n                                .getElementById(`letter-${x + 1}-${y}`)\r\n                                ?.focus()\r\n                              e.preventDefault()\r\n                              break\r\n                            case 'ArrowUp':\r\n                              document\r\n                                .getElementById(`letter-${x}-${y - 1}`)\r\n                                ?.focus()\r\n                              e.preventDefault()\r\n                              break\r\n                            case 'ArrowDown':\r\n                              document\r\n                                .getElementById(`letter-${x}-${y + 1}`)\r\n                                ?.focus()\r\n                              e.preventDefault()\r\n                              break\r\n                          }\r\n                        }}\r\n                        tabIndex={0}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport './App.css'\nimport { Grid } from './Grid'\nimport { Action, redo, reducer, State, undo } from './reducer'\nimport { initialState, StateContext } from './StateContext'\n\nfunction App() {\n  const [state, dispatch] = React.useReducer<React.Reducer<State, Action>>(reducer, initialState)\n  const [highlightHorizontal, setHighlightHorizontal] = React.useState(false)\n  const [highlightVertical, setHighlightVertical] = React.useState(false)\n  return (\n    <div className=\"mx-auto sm:w-3/4 md:w-2/4 fixed inset-0 flex items-center justify-center\">\n      <div className=\"flex flex-col items-center justify-center\">\n        <StateContext.Provider value={{ state: state, dispatch: dispatch }}>\n          <GlobalHotKeys\n            keyMap={{\n              UNDO: ['ctrl+z', 'command+z'],\n              REDO: ['ctrl+y', 'command+y', 'ctrl+shift+z', 'command+shift+z'],\n            }}\n            handlers={{\n              UNDO: () => { console.log('undo'); dispatch(undo()) },\n              REDO: () => { console.log('redo'); dispatch(redo()) },\n            }}\n          >\n            <Grid\n              showSolution\n              highlightHorizontal={highlightHorizontal}\n              highlightVertical={highlightVertical}\n            />\n            {/* <div className=\"m-4\" />\n          <Grid /> */}\n            <div className=\"flex flex-col flex-align-left\">\n              <div className=\"flex space-x-2\">\n                <input\n                  className=\"form-checkbox\"\n                  name=\"highlightHorizontal\"\n                  type=\"checkbox\"\n                  value={highlightHorizontal ? 'checked' : ''}\n                  onChange={(e) => setHighlightHorizontal(!highlightHorizontal)}\n                />\n                <label htmlFor=\"highlightHorizontal\">\n                  Horizontale Wörter hervorheben\n                </label>\n              </div>\n              <div className=\"flex space-x-2\">\n                <input\n                  className=\"form-checkbox\"\n                  type=\"checkbox\"\n                  value={highlightVertical ? 'checked' : ''}\n                  onChange={(e) => setHighlightVertical(!highlightVertical)}\n                />\n                <label htmlFor=\"highlightVertical\">\n                  Vertikale Wörter hervorheben\n                </label>\n              </div>\n            </div>\n          </GlobalHotKeys>\n        </StateContext.Provider>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}